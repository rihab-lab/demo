name: CI

on:
  push:
    paths:
      - 'schemachange/**'
      - 'terraform/**'
  workflow_dispatch:

env:
  SF_ACCOUNT: ${{ secrets.SF_ACCOUNT }}
  SF_USER:    ${{ secrets.SF_USER }}
  SF_PWD:     ${{ secrets.SF_PWD }}

jobs:
  terraform-cloud:
    name: Deploy Terraform
    runs-on: ubuntu-latest

    env:
      TF_TOKEN_app_terraform_io: ${{ secrets.TF_TOKEN_APP_TERRAFORM_IO }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Terraform Format
        run: terraform fmt -check
        working-directory: terraform/

      - name: Terraform Init
        run: terraform init
        working-directory: terraform/

      - name: Terraform Validate
        run: terraform validate
        working-directory: terraform/

  schemachange:
    name: Deploy Schemachange
    needs: terraform-cloud
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Schemachange
        run: pip install schemachange

      - name: Generate connection.toml from template (Python way)
        working-directory: schemachange
        run: |
          python3 -c "
import os
with open('connection.template.toml', 'r') as file:
    content = file.read()
for key in os.environ:
    content = content.replace('${' + key + '}', os.getenv(key, ''))
with open('connection.toml', 'w') as file:
    file.write(content)
"

      - name: Secure connection.toml
        working-directory: schemachange
        run: chmod 600 connection.toml

      - name: Generate Bronze→Silver & Silver→Gold procedures
        working-directory: schemachange
        run: python tools/generate_procedure_merge.py

      - name: Deploy all migrations
        working-directory: schemachange
        run: schemachange deploy --config-file-name schema-change-config.yml --create-change-history-table

      - name: Clean connection.toml
        working-directory: schemachange
        if: always()
        run: rm -f connection.toml
