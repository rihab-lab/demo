MERGE INTO SILVER_LAYER.DIM_PRC_BENCHMARK_SLV AS TARGET
USING (
    SELECT *
    FROM (
        SELECT
            -- Clé technique (HASH)
            TO_NUMERIC(HASH(
                COALESCE(APUKCODE, 'N/A') || '_' || COALESCE(ANABENCH2, 'N/A')
            )) AS PRICINGBENCHMARKPRCINTKEY,

            -- Clé fonctionnelle concaténée et nettoyée
            REPLACE(
                COALESCE(APUKCODE, 'N/A') || '_' || COALESCE(ANABENCH2, 'N/A'),
                ' ',
                '_'
            ) AS PRICINGBENCHMARKPRCKEY,

            APUKCODE,
            ANABENCH2,
            SKUGROUP,
            SYS_SOURCE_DATE,
            CURRENT_TIMESTAMP() AS SYS_DATE_CREATE,

            -- Pour garder une seule ligne par clé
            ROW_NUMBER() OVER (
                PARTITION BY 
                    TO_NUMERIC(HASH(COALESCE(APUKCODE, 'N/A') || '_' || COALESCE(ANABENCH2, 'N/A')))
                ORDER BY 
                    TRY_TO_TIMESTAMP(SYS_SOURCE_DATE) DESC NULLS LAST,
                    CURRENT_TIMESTAMP() DESC
            ) AS row_num
        --FROM BRONZE_LAYER.PRC_BENCHMARK_BRZ
        FROM BRONZE_LAYER.PRC_BENCHMARK_BRZ_STREAM
    )
    WHERE row_num = 1
) AS SOURCE

ON TARGET.PRICINGBENCHMARKPRCINTKEY = SOURCE.PRICINGBENCHMARKPRCINTKEY

WHEN MATCHED THEN UPDATE SET
    TARGET.PRICINGBENCHMARKPRCKEY = SOURCE.PRICINGBENCHMARKPRCKEY,
    TARGET.APUKCODE = SOURCE.APUKCODE,
    TARGET.ANABENCH2 = SOURCE.ANABENCH2,
    TARGET.SKUGROUP = SOURCE.SKUGROUP,
    TARGET.SYS_SOURCE_DATE = SOURCE.SYS_SOURCE_DATE,
    TARGET.SYS_DATE_CREATE = SOURCE.SYS_DATE_CREATE

WHEN NOT MATCHED THEN INSERT (
    PRICINGBENCHMARKPRCINTKEY,
    PRICINGBENCHMARKPRCKEY,
    APUKCODE,
    ANABENCH2,
    SKUGROUP,
    SYS_SOURCE_DATE,
    SYS_DATE_CREATE
) VALUES (
    SOURCE.PRICINGBENCHMARKPRCINTKEY,
    SOURCE.PRICINGBENCHMARKPRCKEY,
    SOURCE.APUKCODE,
    SOURCE.ANABENCH2,
    SOURCE.SKUGROUP,
    SOURCE.SYS_SOURCE_DATE,
    SOURCE.SYS_DATE_CREATE
);